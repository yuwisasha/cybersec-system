from datetime import date

from sqlalchemy.orm import Session

from app.core.logger import logger
from app.models import (
    ReactionRule,
    EventLog,
    Incident,
    IncidentDetail,
    IncidentRecommendation,
    EventSource,
    SeverityLevel,
)
from app.core.telegram import send_telegram_alert


def apply_reaction(event_log: EventLog, db: Session):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    source = (
        db.query(EventSource).filter_by(ip_address=event_log.source_ip).first()
    )
    if not source:
        return

    # –ò—â–µ–º –ø—Ä–∞–≤–∏–ª–æ
    rule = (
        db.query(ReactionRule)
        .filter_by(
            severity_id=event_log.severity_id,
            category_id=event_log.category_id,
            source_type=source.type,
        )
        .first()
    )

    if not rule:
        return  # –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø—Ä–∞–≤–∏–ª–∞

    # –°–æ–∑–¥–∞—ë–º –∏–Ω—Ü–∏–¥–µ–Ω—Ç
    incident = Incident(
        created_at=date.today(),
        description=f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç –ø–æ —Å–æ–±—ã—Ç–∏—é #{event_log.event_id}",
        status="–æ—Ç–∫—Ä—ã—Ç",
    )
    db.add(incident)
    db.flush()

    # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏—è
    db.add(
        IncidentDetail(
            incident_id=incident.id,
            event_id=event_log.event_id,
            added_at=date.today(),
            comment=None,
        )
    )

    # –ü—Ä–∏–≤—è–∑–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    db.add(
        IncidentRecommendation(
            incident_id=incident.id,
            recommendation_id=rule.recommendation_id,
            assigned_at=date.today(),
            status="–Ω–æ–≤–∞—è",
        )
    )

    logger.info(
        f"Rule #{rule.id} triggered for event #{event_log.event_id}"
        f", incident #{incident.id} created"
    )

    severity = (
        db.query(SeverityLevel).filter_by(id=event_log.severity_id).first()
    )
    if severity and severity.name.lower() == "–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π":
        send_telegram_alert(
            f"‚ö†Ô∏è <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Ü–∏–¥–µ–Ω—Ç #{incident.id}</b>\n"
            f"üßæ {event_log.message}\n"
            f"üìç –ò—Å—Ç–æ—á–Ω–∏–∫: {event_log.source_ip}\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {event_log.user_login}"
        )
